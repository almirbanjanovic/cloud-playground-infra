name: APIM Lab Terraform Plan, Approve, Apply
on: 
  workflow_dispatch:
    inputs:
      resourceGroupName:
        type: string
        default: rg-apim-lab-dev-centralus
      storageAccountName:
        type: string
        default: stapimlabdevcentralus
      terraformStateContainerName:
        type: string
        default: tfstate
      terraformStateBlobName:
        type: string
        default: terraform.tfstate
      workingDirectory:
        type: string
        default: ./projects/apim-lab

permissions:
  id-token: write
  contents: read

jobs:

  call-terraform-plan:
    uses: almirbanjanovic/cloud-playground-infra/.github/workflows/terraform-plan.yaml@main
    with:
      resourceGroupName: ${{ inputs.resourceGroupName }}
      storageAccountName: ${{ inputs.storageAccountName }}
      terraformStateContainerName: ${{ inputs.terraformStateContainerName }}
      terraformStateBlobName: ${{ inputs.terraformStateBlobName }}
      workingDirectory: ${{ inputs.workingDirectory }}
    secrets:
      azureClientId: ${{ secrets.AZURE_CLIENT_ID }}
      azureTenantId: ${{ secrets.AZURE_TENANT_ID }}
      azureSubscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  manual-approval:
    name: Manual Approval
    needs: [terraform-plan]
    runs-on: ubuntu-latest
    environment:
      name: approval-required
      # Optional: add a wait timer if you want to delay before approval is allowed
      # wait_timer: 10 minutes
      # Optional: require reviewers
      # reviewers:
      #   - almirbanjanovic
    steps:
      - name: Awaiting manual approval
        run: echo "Waiting for manual approval before applying Terraform plan..."


  call-terraform-apply:
    uses: almirbanjanovic/cloud-playground-infra/.github/workflows/terraform-apply.yaml@main
    with:
      resourceGroupName: ${{ inputs.resourceGroupName }}
      storageAccountName: ${{ inputs.storageAccountName }}
      terraformStateContainerName: ${{ inputs.terraformStateContainerName }}
      terraformStateBlobName: ${{ inputs.terraformStateBlobName }}
      workingDirectory: ${{ inputs.workingDirectory }}
    secrets:
      azureClientId: ${{ secrets.AZURE_CLIENT_ID }}
      azureTenantId: ${{ secrets.AZURE_TENANT_ID }}
      azureSubscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}  